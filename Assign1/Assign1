#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x22d0420 .scope module, "main" "main" 2 1;
 .timescale 0 0;
v0x2308240_0 .var "A", 0 0;
v0x23082f0_0 .net "A0", 0 0, L_0x2309200; 1 drivers
v0x2308370_0 .var "B", 0 0;
v0x23083f0_0 .net "N0", 0 0, L_0x23094e0; 1 drivers
v0x23084f0_0 .net "O0", 0 0, L_0x2309300; 1 drivers
v0x23085c0_0 .net "X0", 0 0, L_0x2309360; 1 drivers
v0x2308690_0 .net "and0", 0 0, L_0x2308db0; 1 drivers
v0x2308760_0 .var "i", 3 0;
v0x2308830_0 .var "i0", 0 0;
v0x23088b0_0 .var "i1", 0 0;
v0x2308990_0 .net "not0", 0 0, L_0x23091a0; 1 drivers
v0x2308a10_0 .net "oput", 0 0, L_0x2309c40; 1 drivers
v0x2308a90_0 .net "or0", 0 0, L_0x2308f10; 1 drivers
v0x2308b60_0 .net "xor0", 0 0, L_0x23090b0; 1 drivers
S_0x2307b20 .scope module, "decoder" "Decoder" 2 6, 2 71, S_0x22d0420;
 .timescale 0 0;
L_0x2308930 .functor NOT 1, v0x2308240_0, C4<0>, C4<0>, C4<0>;
L_0x2308d00 .functor NOT 1, v0x2308370_0, C4<0>, C4<0>, C4<0>;
L_0x2308db0 .functor AND 1, L_0x2308930, L_0x2308d00, C4<1>, C4<1>;
L_0x2308eb0 .functor NOT 1, v0x2308240_0, C4<0>, C4<0>, C4<0>;
L_0x2308f10 .functor AND 1, L_0x2308eb0, v0x2308370_0, C4<1>, C4<1>;
L_0x2308fc0 .functor NOT 1, v0x2308370_0, C4<0>, C4<0>, C4<0>;
L_0x23090b0 .functor AND 1, v0x2308240_0, L_0x2308fc0, C4<1>, C4<1>;
L_0x23091a0 .functor AND 1, v0x2308240_0, v0x2308370_0, C4<1>, C4<1>;
v0x2307c10_0 .net "A", 0 0, v0x2308240_0; 1 drivers
v0x2307c90_0 .net "B", 0 0, v0x2308370_0; 1 drivers
v0x2307d10_0 .net *"_s0", 0 0, L_0x2308930; 1 drivers
v0x2307db0_0 .net *"_s10", 0 0, L_0x2308fc0; 1 drivers
v0x2307e30_0 .net *"_s2", 0 0, L_0x2308d00; 1 drivers
v0x2307ed0_0 .net *"_s6", 0 0, L_0x2308eb0; 1 drivers
v0x2307fb0_0 .alias "and0", 0 0, v0x2308690_0;
v0x2308030_0 .alias "not0", 0 0, v0x2308990_0;
v0x23080e0_0 .alias "or0", 0 0, v0x2308a90_0;
v0x2308190_0 .alias "xor0", 0 0, v0x2308b60_0;
S_0x2307650 .scope module, "comp" "Comp" 2 7, 2 80, S_0x22d0420;
 .timescale 0 0;
L_0x2309200 .functor AND 1, v0x2308830_0, v0x23088b0_0, C4<1>, C4<1>;
L_0x2309300 .functor OR 1, v0x2308830_0, v0x23088b0_0, C4<0>, C4<0>;
L_0x2309360 .functor XOR 1, v0x2308830_0, v0x23088b0_0, C4<0>, C4<0>;
L_0x23094e0 .functor NOT 1, v0x2308830_0, C4<0>, C4<0>, C4<0>;
v0x2307740_0 .alias "A0", 0 0, v0x23082f0_0;
v0x23077e0_0 .alias "N0", 0 0, v0x23083f0_0;
v0x2307890_0 .alias "O0", 0 0, v0x23084f0_0;
v0x2307940_0 .alias "X0", 0 0, v0x23085c0_0;
v0x2307a20_0 .net "i0", 0 0, v0x2308830_0; 1 drivers
v0x2307aa0_0 .net "i1", 0 0, v0x23088b0_0; 1 drivers
S_0x22d0e30 .scope module, "output0" "Output" 2 8, 2 89, S_0x22d0420;
 .timescale 0 0;
L_0x2309560 .functor AND 1, L_0x2309200, L_0x2308db0, C4<1>, C4<1>;
L_0x23096e0 .functor AND 1, L_0x2309300, L_0x2308f10, C4<1>, C4<1>;
L_0x2309880 .functor AND 1, L_0x2309360, L_0x23090b0, C4<1>, C4<1>;
L_0x2309a00 .functor AND 1, L_0x23094e0, L_0x23091a0, C4<1>, C4<1>;
L_0x2309b80 .functor OR 1, L_0x2309560, L_0x23096e0, C4<0>, C4<0>;
L_0x2309be0 .functor OR 1, L_0x2309b80, L_0x2309880, C4<0>, C4<0>;
L_0x2309c40 .functor OR 1, L_0x2309be0, L_0x2309a00, C4<0>, C4<0>;
v0x22cfe70_0 .alias "A0", 0 0, v0x23082f0_0;
v0x2306ba0_0 .alias "N0", 0 0, v0x23083f0_0;
v0x2306c40_0 .alias "O0", 0 0, v0x23084f0_0;
v0x2306ce0_0 .alias "X0", 0 0, v0x23085c0_0;
v0x2306d90_0 .net *"_s10", 0 0, L_0x2309be0; 1 drivers
v0x2306e30_0 .net *"_s8", 0 0, L_0x2309b80; 1 drivers
v0x2306f10_0 .alias "and0", 0 0, v0x2308690_0;
v0x2306fb0_0 .alias "not0", 0 0, v0x2308990_0;
v0x23070a0_0 .alias "oput", 0 0, v0x2308a10_0;
v0x2307140_0 .alias "or0", 0 0, v0x2308a90_0;
v0x2307240_0 .net "w0", 0 0, L_0x2309560; 1 drivers
v0x23072e0_0 .net "w1", 0 0, L_0x23096e0; 1 drivers
v0x23073f0_0 .net "w2", 0 0, L_0x2309880; 1 drivers
v0x2307490_0 .net "w3", 0 0, L_0x2309a00; 1 drivers
v0x23075b0_0 .alias "xor0", 0 0, v0x2308b60_0;
    .scope S_0x22d0420;
T_0 ;
    %set/v v0x2308240_0, 0, 1;
    %set/v v0x2308370_0, 0, 1;
    %vpi_call 2 15 "$display", "AND TESTS\012A=%b B=%b", v0x2308240_0, v0x2308370_0;
    %delay 1, 0;
    %vpi_call 2 17 "$display", "DECODER TEST\012and0=%b or0=%b xor0=%b not0=%b\012", v0x2308690_0, v0x2308a90_0, v0x2308b60_0, v0x2308990_0;
    %set/v v0x2308760_0, 0, 4;
T_0.0 ;
    %load/v 8, v0x2308760_0, 4;
    %mov 12, 0, 1;
   %cmpi/u 8, 4, 5;
    %jmp/0xz T_0.1, 5;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.2, 4;
    %load/x1p 8, v0x2308760_0, 1;
    %jmp T_0.3;
T_0.2 ;
    %mov 8, 2, 1;
T_0.3 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0x2308830_0, 8, 1;
    %load/v 8, v0x2308760_0, 1; Only need 1 of 4 bits
; Save base=8 wid=1 in lookaside.
    %set/v v0x23088b0_0, 8, 1;
    %delay 1, 0;
    %vpi_call 2 22 "$display", "i0=%b i1=%b\012A0=%b O0=%b X0=%b N0=%b oput=%b\012", v0x2308830_0, v0x23088b0_0, v0x23082f0_0, v0x23084f0_0, v0x23085c0_0, v0x23083f0_0, v0x2308a10_0;
    %load/v 8, v0x2308760_0, 4;
    %mov 12, 0, 28;
    %addi 8, 1, 32;
    %set/v v0x2308760_0, 8, 4;
    %jmp T_0.0;
T_0.1 ;
    %set/v v0x2308240_0, 0, 1;
    %set/v v0x2308370_0, 1, 1;
    %vpi_call 2 29 "$display", "OR TESTS\012A=%b B=%b", v0x2308240_0, v0x2308370_0;
    %delay 1, 0;
    %vpi_call 2 31 "$display", "DECODER TEST\012and0=%b or0=%b xor0=%b not0=%b\012", v0x2308690_0, v0x2308a90_0, v0x2308b60_0, v0x2308990_0;
    %set/v v0x2308760_0, 0, 4;
T_0.4 ;
    %load/v 8, v0x2308760_0, 4;
    %mov 12, 0, 1;
   %cmpi/u 8, 4, 5;
    %jmp/0xz T_0.5, 5;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.6, 4;
    %load/x1p 8, v0x2308760_0, 1;
    %jmp T_0.7;
T_0.6 ;
    %mov 8, 2, 1;
T_0.7 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0x2308830_0, 8, 1;
    %load/v 8, v0x2308760_0, 1; Only need 1 of 4 bits
; Save base=8 wid=1 in lookaside.
    %set/v v0x23088b0_0, 8, 1;
    %delay 1, 0;
    %vpi_call 2 36 "$display", "i0=%b i1=%b\012A0=%b O0=%b X0=%b N0=%b oput=%b\012", v0x2308830_0, v0x23088b0_0, v0x23082f0_0, v0x23084f0_0, v0x23085c0_0, v0x23083f0_0, v0x2308a10_0;
    %load/v 8, v0x2308760_0, 4;
    %mov 12, 0, 28;
    %addi 8, 1, 32;
    %set/v v0x2308760_0, 8, 4;
    %jmp T_0.4;
T_0.5 ;
    %set/v v0x2308240_0, 1, 1;
    %set/v v0x2308370_0, 0, 1;
    %vpi_call 2 43 "$display", "XOR TESTS\012A=%b B=%b", v0x2308240_0, v0x2308370_0;
    %delay 1, 0;
    %vpi_call 2 45 "$display", "DECODER TEST\012and0=%b or0=%b xor0=%b not0=%b\012", v0x2308690_0, v0x2308a90_0, v0x2308b60_0, v0x2308990_0;
    %set/v v0x2308760_0, 0, 4;
T_0.8 ;
    %load/v 8, v0x2308760_0, 4;
    %mov 12, 0, 1;
   %cmpi/u 8, 4, 5;
    %jmp/0xz T_0.9, 5;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.10, 4;
    %load/x1p 8, v0x2308760_0, 1;
    %jmp T_0.11;
T_0.10 ;
    %mov 8, 2, 1;
T_0.11 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0x2308830_0, 8, 1;
    %load/v 8, v0x2308760_0, 1; Only need 1 of 4 bits
; Save base=8 wid=1 in lookaside.
    %set/v v0x23088b0_0, 8, 1;
    %delay 1, 0;
    %vpi_call 2 50 "$display", "i0=%b i1=%b\012A0=%b O0=%b X0=%b N0=%b oput=%b\012", v0x2308830_0, v0x23088b0_0, v0x23082f0_0, v0x23084f0_0, v0x23085c0_0, v0x23083f0_0, v0x2308a10_0;
    %load/v 8, v0x2308760_0, 4;
    %mov 12, 0, 28;
    %addi 8, 1, 32;
    %set/v v0x2308760_0, 8, 4;
    %jmp T_0.8;
T_0.9 ;
    %set/v v0x2308240_0, 1, 1;
    %set/v v0x2308370_0, 1, 1;
    %vpi_call 2 57 "$display", "NOT TESTS\012A=%b B=%b", v0x2308240_0, v0x2308370_0;
    %delay 1, 0;
    %vpi_call 2 59 "$display", "DECODER TEST\012and0=%b or0=%b xor0=%b not0=%b\012", v0x2308690_0, v0x2308a90_0, v0x2308b60_0, v0x2308990_0;
    %set/v v0x2308760_0, 0, 4;
T_0.12 ;
    %load/v 8, v0x2308760_0, 4;
    %mov 12, 0, 1;
   %cmpi/u 8, 4, 5;
    %jmp/0xz T_0.13, 5;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.14, 4;
    %load/x1p 8, v0x2308760_0, 1;
    %jmp T_0.15;
T_0.14 ;
    %mov 8, 2, 1;
T_0.15 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0x2308830_0, 8, 1;
    %load/v 8, v0x2308760_0, 1; Only need 1 of 4 bits
; Save base=8 wid=1 in lookaside.
    %set/v v0x23088b0_0, 8, 1;
    %delay 1, 0;
    %vpi_call 2 64 "$display", "i0=%b i1=%b\012A0=%b O0=%b X0=%b N0=%b oput=%b\012", v0x2308830_0, v0x23088b0_0, v0x23082f0_0, v0x23084f0_0, v0x23085c0_0, v0x23083f0_0, v0x2308a10_0;
    %load/v 8, v0x2308760_0, 4;
    %mov 12, 0, 28;
    %addi 8, 1, 32;
    %set/v v0x2308760_0, 8, 4;
    %jmp T_0.12;
T_0.13 ;
    %end;
    .thread T_0;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "FeltsJ1.v";
